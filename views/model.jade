extends layout

block breadcrumb
    span.divider /
    | #{model.label}

block body
    .page-header
        h2 #{model.label}

    #content.row
        div(class='span#{filters.length ? 9 : 12}')
            .btn-toolbar.clearfix
                .btn-group.pull-right
                    - if (creatable)
                        a.btn.btn-warning(href="#{rootPath}/model/#{model_name}/document/new#{makeLink()}")
                            i.icon-plus.icon-white
                            |  #{__('New')}
                            - if (model.model.singular)
                                strong  #{model.model.singular}
                            - else
                                strong  #{model_name}
                                |  #{__('item')}
                    a.btn.btn-primary(href="#{rootPath}/model/#{model_name}/export#{makeLink()}")
                        |  #{__('Export')}
                - if (search)
                    p
                        form
                            input(type="text",name="_search",value="#{search_value}",style="width:300px")
                            - for(var key in current_filters)
                                - if(key != "_search")
                                    input(type="hidden",name="#{key}",value="#{current_filters[key]}")
                            - if(dialog)
                                input(type="hidden",name="_dialog",value="yes")
                            button(type="submit") #{__('Search')}

                - if (sortable)
                    button#reorder.btn.btn-success.pull-left.hide(data-loading-text='Saving...', data-saved-text='Saved!')
                        i.icon-ok.icon-white
                        |  #{__('Save Order')}

                - if (actions.length && documents.length)
                    #actions.input-prepend.hide(style="white-space:normal;")
                        span.add-on With selected: &nbsp;
                        div.btn-group(style="white-space:normal;")
                            - each action in actions
                                - if (action.value == 'delete')
                                    button.btn.btn-danger(value='#{action.value}',data-multi='true',data-confirm='true')
                                        i.icon-trash.icon-white
                                        |  #{action.label}
                                - else
                                    button.btn(value='#{action.value}',data-global='#{action.global ? "true" : "false"}',data-dialogs='#{(action.dialogs || []).join("")}',data-multi='#{action.multi === false ? "false" : "true"}',data-confirm='#{action.confirm}') #{action.label}

            - if (!documents.length)
                p.center #{__('No documents yet')}

            - else
                p.counter #{__('Viewing')} #{start+1}–#{start + documents.length} #{__('of')} #{total_count} #{__('documents')}

                table.table.table-bordered.table-hover
                    thead
                        tr
                            th.center
                                input.select-all-rows(type='checkbox')
                            - each field in list_fields
                                th.table-header-repeat.line-left.minwidth-1
                                    a(href='#{orderLink(field)}') #{fieldLabel(field)}

                            - if (cloneable)
                                th &nbsp;
                    tbody(class=sortable?'sortable':'')
                        - each doc in documents
                            - var url = rootPath + '/model/' + model_name + '/document/' + doc._id +  makeLink('order_by','__all__')
                            tr(id=doc._id)
                                td.span1.center
                                    input.select-row(type='checkbox')
                                    - if (sortable)
                                        .list-drag
                                            i.icon-resize-vertical

                                - each field in list_fields
                                    td.span3(class=field == 'picture'?'picture':'')
                                        - if (field == 'picture')
                                            - if (doc[field] && doc[field].public_id)
                                                a(href=url)
                                                    img(src=cloudinary.url(doc[field].public_id + '.png', { width: 80, height: 80, crop: 'fill' }))
                                        - else if (editable && !/<.*>/.test(doc[field] || ''))
                                            a(href=url) !{doc[field]}
                                        - else
                                            p !{doc[field]}

                                td.span2.btn-group
                                    - if (!hideRowButton)
                                        a.btn.btn-primary(href=url) #{__(editable ? 'Edit' : 'View')}
                                    - if (cloneable)
                                        a.btn(href=url + '&clone=true') #{__('Duplicate')}
                                    - if (model.options.preview)
                                        a.btn(href="#{previewLink(doc)}") #{__('View')}
                                    a.btn.btn-secondary.copy-id(href='#') Copy Id

                p.counter #{__('Viewing')} #{start+1}–#{start + documents.length} #{__('of')} #{total_count} #{__('documents')}
                - if (total_count > count)
                    .pagination
                        ul
                            - for (var i = 0, page = 1; i < total_count; i += count, page++)
                                - if (start == i)
                                    li.active
                                        span #{page}
                                - else if (start/count <= page+5 && start/count >= page-5 || i == 0 || i+count >= total_count)
                                    li
                                        a(href='#{makeLink("start",i)}') #{page}

        - if (filters.length)
            #filters.span3.well
                h3
                    i.icon-filter
                    | #{__('Filters')}
                    small.pull-right
                        a(href='#{rootPath}/model/#{model_name}') #{__('Clear')}

                ul.nav.nav-list
                    - each filter in filters
                        - var filterValues = typeof(filter.values) == 'function' ? filter.values() : filter.values
                        li.nav-header
                            strong #{filter.key}:
                        - if(filterValues.length >= 10)
                            select(onchange="var v = $(this).val(); window.location.href = v !== '' ? '#{makeLink(filter.key,'__replace__')}'.replace('__replace__',v) : '#{makeLink(filter.key,'')}';")
                                - if (current_filters[filter.key])
                                    option(value='__all__') All
                                - else
                                    option(selected) Select..
                                - each value in filterValues
                                    - if(value && value.text)
                                        option(value="#{value.value || ''}",selected=(current_filters[filter.key] !== String(value.value) ? undefined : 'selected')) #{value.text}
                            - if (filter.isString)
                                div
                                    input(type='text',style='width:217px; !important ',name='#{filter.key}',value='#{current_filters[filter.key] || ""}')
                                    button.free_search(data-href='#{makeLink(filter.key, "__replace__")}') #{__('search')}
                        - else
                            - if (current_filters[filter.key])
                                li
                                    a(href='#{makeLink(filter.key,"__all__")}') All
                            - else
                                li.active
                                    strong All
                            - each value in filterValues
                                - if (value)
                                    li
                                        - if (current_filters[filter.key] !== String(value.value) )
                                            a(href='#{makeLink(filter.key, value.value)}') #{value.text}
                                        - else
                                            strong #{value.text}

                            - if (filter.isString)
                                div
                                    input(type='text',style='width:217px; !important ',name='#{filter.key}',value='#{current_filters[filter.key] || ""}')
                                    button.free_search(data-href='#{makeLink(filter.key, "__replace__")}') #{__('search')}

block scripts
    script.
        var startIndex = #{start},
            model = '#{model_name}';

    script(src="#{rootPath}/js/lib/bootbox.min.js")
    script(src="#{rootPath}/js/model.js")
